---
name: build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

env:
  PROJECT_NAME: Git-Mediawiki
  COMPOSER_VERSION: 2.1.14
  MW_INSTALL_PATH: /var/www/html
  MW_EXT_PATH: /var/www/html/extensions
  DB_ROOT_USER: root
  DB_ROOT_PWD: database
  MW_DB_PATH: /var/www/data
  MW_DB_USER: wiki
  MW_DB_PWD: wiki
  MW_DB_NAME: wiki
  DB_PRISTINE: /var/www/pristine.tgz
  SERVER_NAME: localhost

jobs:
  perlcritic:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Perl critic
        uses: Difegue/action-perlcritic@master
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          args: --stern ./Git/* ./t/*.pl ./git-*

  editorconfig:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Editorconfig
        uses: zbeekman/EditorConfig-Action@master
        env:
          GITHUB_TOKEN: ${{ github.token }}

  build:
    runs-on: ubuntu-latest
    container: mediawiki:${{ matrix.mediawiki_version }}

    strategy:
      matrix:
        include:
          - mediawiki_version: 1.35
            database_type: sqlite
            experimental: false
          - mediawiki_version: 1.36
            database_type: sqlite
            experimental: true
          - mediawiki_version: 1.37
            database_type: sqlite
            experimental: true

    env:
      MW_DB_TYPE: ${{ matrix.database_type }}
      MW_DB_SERVER: ${{ matrix.database_type }}

    steps:
      - name: MediaWiki Install
        run: >
          php ${{ env.MW_INSTALL_PATH }}/maintenance/install.php
          --pass=Password123456
          --server="http://${{ env.SERVER_NAME}}"
          --scriptpath=""
          --dbtype=${{ env.MW_DB_TYPE }}
          --dbserver=${{ env.MW_DB_SERVER }}
          --installdbuser=${{ env.DB_ROOT_USER }}
          --installdbpass=${{ env.DB_ROOT_PWD }}
          --dbname=${{ env.MW_DB_NAME }}
          --dbuser=${{ env.MW_DB_USER }}
          --dbpass=${{ env.MW_DB_PWD }}
          --dbpath=${{ env.MW_DB_PATH }}
          test WikiSysop &&
          echo "error_reporting( -1 ); ini_set( 'display_errors', 1 ); " | tee -a ${{ env.MW_INSTALL_PATH }}/LocalSettings.php

      - name: Copy to workspace
        run: |
          mkdir -p ${{ github.workspace }}
          tar -C ${{ env.MW_INSTALL_PATH }} -c LocalSettings.php | tar -C ${{ github.workspace }} -xv
          tar -C ${{ env.MW_DB_PATH }}/.. -c data | tar -C ${{ github.workspace }} -xv
          tar -C ${{ github.workspace }} -cvf artifact.tar data LocalSettings.php

      - name: Save artifacts
        uses: actions/upload-artifact@v3
        with:
          name: runtime-${{ matrix.mediawiki_version }}
          path: ${{ github.workspace }}/artifact.tar

  web-server:
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        include:
          - mediawiki_version: 1.35
            database_type: sqlite
            experimental: false
          - mediawiki_version: 1.36
            database_type: sqlite
            experimental: true
          - mediawiki_version: 1.37
            database_type: sqlite
            experimental: true

    services:
      mediawiki:
        image: mediawiki:${{ matrix.mediawiki_version }}
        ports:
          - 80:80
        options: -v ${{ github.workspace }}:/workspace

    steps:
      - name: Load artifacts
        uses: actions/download-artifact@v3
        with:
          name: runtime-${{ matrix.mediawiki_version }}
          path: ${{ github.workspace }}

      - name: Extract artifacts
        run: |
          sudo tar -C ${{ github.workspace }} -xvf artifact.tar
          docker exec -i ${{ job.services.mediawiki.id }} rm -rf ${{ env.MW_DB_PATH }}
          docker exec -i ${{ job.services.mediawiki.id }} ln -s /workspace/LocalSettings.php ${{ env.MW_INSTALL_PATH }}
          docker exec -i ${{ job.services.mediawiki.id }} ln -s /workspace/data ${{ env.MW_DATA_PATH }}
          echo "::notice title=Links and permissions::Lookie, lookie"
          docker exec -i ${{ job.services.mediawiki.id }} ls -l /workspace ${{ env.MW_DATA_PATH }} ${{ env.MW_INSTALL_PATH }}

      - name: Checkout Project
        uses: actions/checkout@v2
        with:
          path: ${{ env.PROJECT_NAME }}
          submodules: true

      - name: Working web
        run: |
          curl http://localhost:80
          docker logs ${{ job.services.mediawiki.id }}
